{"version":3,"sources":["webpack:///./src/pages/svg_line.js","webpack:///./src/pages/svg_bar.jsx","webpack:///./src/pages/svg_responsive.jsx"],"names":["Line","useState","data","setData","svgRef","useRef","useEffect","svg","d3","current","myLine","x","value","index","y","curve","selectAll","join","attr","headerText","title","className","ref","onClick","map","filter","Bar","xScale","domain","range","padding","yScale","colorScale","clamp","xAxis","ticks","length","select","style","call","yAxis","bandwidth","transition","marginRight","SVGPage","console","log"],"mappings":"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","file":"component---src-pages-svg-responsive-jsx-6fc6579297e87a42dae2.js","sourcesContent":["import React, {useState, useRef, useEffect} from 'react'\nimport * as d3 from 'd3'\nimport SEO from \"../components/seo\";\nimport Layout from \"../components/layout\";\nimport \"../styles/svg_bar.css\"\n\nfunction Line(){\n    const [data, setData] = useState([25, 30, 45, 60, 20, 15, 75]);\n    const svgRef = useRef();\n\n    function draw(){\n        const svg = d3.select(svgRef.current);\n        const myLine =\n                d3.line()\n                    .x( (value, index) => index*50 )\n                    .y( value  => 150 - value )\n                    .curve(d3.curveCardinal)\n        svg\n            .selectAll(\"path\")\n            .data([data])\n            .join(\"path\")\n            .attr(\"d\", value => myLine(value))\n            .attr(\"fill\", \"none\")\n            .attr(\"stroke\", \"blue\")\n    }\n    useEffect(draw, data);\n\n    return(\n        <Layout headerText=\"SVG Line\">\n            <SEO title=\"SVG Line\" />\n            <div className='barWrapper'>\n                <svg ref={svgRef}></svg>\n                <br/>\n                <button onClick={() => setData(data.map(value => value + 5))}>Update Data</button>\n                <button onClick={() => setData(data.filter(value => value < 35))}>Filter Data</button>\n            </div>\n        </Layout>\n    )\n}\n\nexport default Line","import React, {useState, useRef, useEffect} from 'react'\nimport * as d3 from 'd3'\nimport SEO from \"../components/seo\";\nimport Layout from \"../components/layout\";\nimport \"../styles/svg_bar.css\"\n\nexport default function Bar(){\n\n    const [data, setData] = useState([25, 30, 45, 60, 10, 65, 75]);\n    const svgRef = useRef();\n\n    useEffect(() => {\n\n        const svg = d3.select(svgRef.current);\n\n        const xScale = d3.scaleBand()\n            .domain(data.map((value, index) => index))\n            .range([0, 300])\n            .padding(0.5);\n\n        const yScale = d3.scaleLinear()\n            .domain([0, 150])\n            .range([150, 0]);\n\n        const colorScale = d3.scaleLinear()\n            .domain([75, 100, 150])\n            .range([\"green\", \"orange\", \"red\"])\n            .clamp(true);\n\n        const xAxis = d3.axisBottom(xScale).ticks(data.length);\n\n        svg\n            .select(\".x-axis\")\n            .style(\"transform\", \"translateY(150px)\")\n            .call(xAxis);\n\n        const yAxis = d3.axisRight(yScale);\n        svg\n            .select(\".y-axis\")\n            .style(\"transform\", \"translateX(300px)\")\n            .call(yAxis);\n\n        svg\n            .selectAll(\".bar\")\n            .data(data)\n            .join(\"rect\")\n            .attr(\"class\", \"bar\")\n\n            .style(\"transform\", \"scale(1, -1)\")\n            .attr(\"x\", (value, index) => xScale(index))\n            .attr(\"y\", -150)\n            .attr(\"width\", xScale.bandwidth())\n            .transition()\n            .attr(\"fill\", colorScale)\n            .attr(\"height\", value => 150 - yScale(value));\n\n    }, [data]);\n\n    return(\n        <Layout headerText=\"SVG Scale and Axes\">\n            <SEO title=\"SVG Scale and Axes\" />\n            <div className='barWrapper'>\n                <svg ref={svgRef}>\n                    <g className=\"x-axis\" />\n                    <g className=\"y-axis\" />\n                </svg>\n                <br/>\n                <br/>\n                <br/>\n                <div >\n                    <button style={{ marginRight: \"10px\"}} onClick={() => setData(data.map(value => value + 5))}>Update data</button>\n                    <button onClick={() => setData(data.filter(value => value < 35))}>Filter data</button>\n                </div>\n            </div>\n        </Layout>\n    )\n}","import React, {useState, useRef, useEffect} from 'react'\nimport * as d3 from 'd3'\nimport SEO from \"../components/seo\";\nimport Layout from \"../components/layout\";\nimport \"../styles/svg_bar.css\"\n\nimport  Bar from \"./svg_bar.jsx\";\nimport  Line from \"./svg_line.js\";\n\nexport default function SVGPage(){\n\n    useEffect(() => {\n\n    }, []);\n\n    return(\n        <Layout headerText=\"SVG Responsive Page\">\n            <SEO title=\"SVG Responsive Page\" />\n            <div className='svgWrapper'>\n                <br/>\n                <br/>\n                <br/>\n                <div >\n                    <button style={{ marginRight: \"10px\"}} onClick={() => console.log('clicked')}>Update data</button>\n                    <button onClick={() => console.log('clicked')}>Filter data</button>\n                </div>\n            </div>\n        </Layout>\n    )\n}"],"sourceRoot":""}
{"version":3,"sources":["webpack:///./src/pages/projects.js","webpack:///./src/components/seo.js"],"names":["ProjectsPage","data","title","keywords","className","allProjectsJson","edges","map","project","key","node","id","description","href","url","buttonText","fluid","thumbnailImage","childImageSharp","projectsQuery","SEO","lang","meta","site","useStaticQuery","metaDescription","siteMetadata","defaultTitle","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps"],"mappings":"8FAAA,2JA4CeA,UAjCM,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACb,kBAAC,IAAD,KACI,kBAAC,IAAD,CACIC,MAAM,WACNC,SAAU,CAAC,SAAD,oCAEd,wCACA,yBAAKC,UAAU,gBACNH,EAAKI,gBAAgBC,MAAMC,KAAI,SAAAC,GAAO,OACnC,yBAAKC,IAAKD,EAAQE,KAAKC,GAAIP,UAAU,QAEjC,yBAAKA,UAAU,WACP,4BAAKI,EAAQE,KAAKR,OAClB,yBAAKE,UAAU,WACNI,EAAQE,KAAKE,aAEtB,uBAAGC,KAAML,EAAQE,KAAKI,KACd,kBAAC,IAAD,CAAQC,WAAW,wBAGnC,yBAAKX,UAAU,aAGX,kBAAC,IAAD,CAAKY,MAAOR,EAAQE,KAAKO,eAAeC,gBAAgBF,gBAYjF,IAAMG,EAAa,c,yDC9C1B,iDAYA,SAASC,EAAT,GAAkD,IAAD,IAAlCR,EAAkC,EAAlCA,YAAaS,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,KAAMpB,EAAS,EAATA,MAC9BqB,EAASC,yBAAe,YAAxBD,KAcFE,EAAkBb,GAAeW,EAAKG,aAAad,YACnDe,EAAY,UAAGJ,EAAKG,oBAAR,aAAG,EAAmBxB,MAExC,OACE,kBAAC,IAAD,CACE0B,eAAgB,CACdP,QAEFnB,MAAOA,EACP2B,cAAeF,EAAY,QAAWA,EAAiB,KACvDL,KAAM,CACJ,CACEQ,KAAK,cACLC,QAASN,GAEX,CACEO,SAAS,WACTD,QAAS7B,GAEX,CACE8B,SAAS,iBACTD,QAASN,GAEX,CACEO,SAAS,UACTD,QAAQ,WAEV,CACED,KAAK,eACLC,QAAQ,WAEV,CACED,KAAK,kBACLC,SAAS,UAAAR,EAAKG,oBAAL,eAAmBO,SAAnB,IAEX,CACEH,KAAK,gBACLC,QAAS7B,GAEX,CACE4B,KAAK,sBACLC,QAASN,IAEXS,OAAOZ,KAKfF,EAAIe,aAAe,CACjBd,KAAK,KACLC,KAAM,GACNV,YAAY,IAUCQ","file":"component---src-pages-projects-js-6351d9db29ef913eb201.js","sourcesContent":["import React from 'react';\nimport { graphql } from 'gatsby';\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\nimport Img from 'gatsby-image';\nimport Button from '../components/button';\nimport styles from '../styles/projects.css'\nimport {css} from \"@emotion/core\";\n\n\n\nconst ProjectsPage = ({ data }) => (\n        <Layout>\n            <SEO\n                title=\"Projects\"\n                keywords={[`gatsby`, `application`, `react`, `projects`]}\n            />\n            <h1>Projects</h1>\n            <div className=\"project-list\">\n                    {data.allProjectsJson.edges.map(project => (\n                        <div key={project.node.id} className=\"item\" >\n\n                            <div className=\"content\">\n                                    <h2>{project.node.title}</h2>\n                                    <div className=\"excerpt\">\n                                            {project.node.description}\n                                    </div>\n                                    <a href={project.node.url}>\n                                            <Button buttonText=\"Visit the Website\" />\n                                    </a>\n                            </div>\n                            <div className=\"thumbnail\">\n\n\n                                <Img fluid={project.node.thumbnailImage.childImageSharp.fluid} />\n                                {/*<Img fixed={data.proj2.childImageSharp.fixed} css={css`margin: auto; max-width: 160px; border-radius: 50%; margin-right: 0;`}> </Img>*/}\n\n                            </div>\n                        </div>\n                    ))}\n            </div>\n    </Layout>\n);\n\nexport default ProjectsPage;\n\nexport const projectsQuery = graphql`\n  query {\n    allProjectsJson(sort: { order: DESC, fields: [date] }) {\n      edges {\n        node {\n          id\n          title\n          date\n          description\n          url\n          thumbnailImage {\n            childImageSharp {\n              fluid(maxWidth: 1200) {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n        }\n      }\n    }\n    }\n`;\n\n\n\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Helmet } from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={defaultTitle ? `%s | ${defaultTitle}` : null}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata?.author || ``,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n"],"sourceRoot":""}
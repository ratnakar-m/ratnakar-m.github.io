{"version":3,"sources":["webpack:///./src/pages/svg_bar.jsx"],"names":["Bar","useState","data","setData","svgRef","useRef","useEffect","svg","d3","current","xScale","domain","map","value","index","range","padding","yScale","colorScale","clamp","xAxis","ticks","length","select","style","call","yAxis","selectAll","join","attr","bandwidth","transition","headerText","title","className","ref","marginRight","onClick","filter"],"mappings":"8FAAA,sHAMe,SAASA,IAAM,IAAD,EAEDC,mBAAS,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAAnDC,EAFkB,KAEZC,EAFY,KAGnBC,EAASC,mBAiDf,OA/CAC,qBAAU,WAEN,IAAMC,EAAMC,IAAUJ,EAAOK,SAEvBC,EAASF,MACVG,OAAOT,EAAKU,KAAI,SAACC,EAAOC,GAAR,OAAkBA,MAClCC,MAAM,CAAC,EAAG,MACVC,QAAQ,IAEPC,EAAST,MACVG,OAAO,CAAC,EAAG,MACXI,MAAM,CAAC,IAAK,IAEXG,EAAaV,MACdG,OAAO,CAAC,GAAI,IAAK,MACjBI,MAAM,CAAC,QAAS,SAAU,QAC1BI,OAAM,GAELC,EAAQZ,IAAcE,GAAQW,MAAMnB,EAAKoB,QAE/Cf,EACKgB,OAAO,WACPC,MAAM,YAAa,qBACnBC,KAAKL,GAEV,IAAMM,EAAQlB,IAAaS,GAC3BV,EACKgB,OAAO,WACPC,MAAM,YAAa,qBACnBC,KAAKC,GAEVnB,EACKoB,UAAU,QACVzB,KAAKA,GACL0B,KAAK,QACLC,KAAK,QAAS,OAEdL,MAAM,YAAa,gBACnBK,KAAK,KAAK,SAAChB,EAAOC,GAAR,OAAkBJ,EAAOI,MACnCe,KAAK,KAAM,KACXA,KAAK,QAASnB,EAAOoB,aACrBC,aACAF,KAAK,OAAQX,GACbW,KAAK,UAAU,SAAAhB,GAAK,OAAI,IAAMI,EAAOJ,QAE3C,CAACX,IAGA,kBAAC,IAAD,CAAQ8B,WAAW,sBACf,kBAAC,IAAD,CAAKC,MAAM,uBACX,yBAAKC,UAAU,cACX,yBAAKC,IAAK/B,GACN,uBAAG8B,UAAU,WACb,uBAAGA,UAAU,YAEjB,6BACA,6BACA,6BACA,6BACI,4BAAQV,MAAO,CAAEY,YAAa,QAASC,QAAS,kBAAMlC,EAAQD,EAAKU,KAAI,SAAAC,GAAK,OAAIA,EAAQ,QAAxF,eACA,4BAAQwB,QAAS,kBAAMlC,EAAQD,EAAKoC,QAAO,SAAAzB,GAAK,OAAIA,EAAQ,SAA5D,oB","file":"component---src-pages-svg-bar-jsx-9ab4ce1b4a4a0e6b23a8.js","sourcesContent":["import React, {useState, useRef, useEffect} from 'react'\nimport * as d3 from 'd3'\nimport SEO from \"../components/seo\";\nimport Layout from \"../components/layout\";\nimport \"../styles/svg_bar.css\"\n\nexport default function Bar(){\n\n    const [data, setData] = useState([25, 30, 45, 60, 10, 65, 75]);\n    const svgRef = useRef();\n\n    useEffect(() => {\n\n        const svg = d3.select(svgRef.current);\n\n        const xScale = d3.scaleBand()\n            .domain(data.map((value, index) => index))\n            .range([0, 300])\n            .padding(0.5);\n\n        const yScale = d3.scaleLinear()\n            .domain([0, 150])\n            .range([150, 0]);\n\n        const colorScale = d3.scaleLinear()\n            .domain([75, 100, 150])\n            .range([\"green\", \"orange\", \"red\"])\n            .clamp(true);\n\n        const xAxis = d3.axisBottom(xScale).ticks(data.length);\n\n        svg\n            .select(\".x-axis\")\n            .style(\"transform\", \"translateY(150px)\")\n            .call(xAxis);\n\n        const yAxis = d3.axisRight(yScale);\n        svg\n            .select(\".y-axis\")\n            .style(\"transform\", \"translateX(300px)\")\n            .call(yAxis);\n\n        svg\n            .selectAll(\".bar\")\n            .data(data)\n            .join(\"rect\")\n            .attr(\"class\", \"bar\")\n\n            .style(\"transform\", \"scale(1, -1)\")\n            .attr(\"x\", (value, index) => xScale(index))\n            .attr(\"y\", -150)\n            .attr(\"width\", xScale.bandwidth())\n            .transition()\n            .attr(\"fill\", colorScale)\n            .attr(\"height\", value => 150 - yScale(value));\n\n    }, [data]);\n\n    return(\n        <Layout headerText=\"SVG Scale and Axes\">\n            <SEO title=\"SVG Scale and Axes\" />\n            <div className='barWrapper'>\n                <svg ref={svgRef}>\n                    <g className=\"x-axis\" />\n                    <g className=\"y-axis\" />\n                </svg>\n                <br/>\n                <br/>\n                <br/>\n                <div >\n                    <button style={{ marginRight: \"10px\"}} onClick={() => setData(data.map(value => value + 5))}>Update data</button>\n                    <button onClick={() => setData(data.filter(value => value < 35))}>Filter data</button>\n                </div>\n            </div>\n        </Layout>\n    )\n}"],"sourceRoot":""}